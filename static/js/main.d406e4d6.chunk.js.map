{"version":3,"sources":["static/slow.gif","components/slider.jsx","components/modalPopUp.jsx","components/colourPicker.jsx","components/sliders.jsx","components/fileUpload.jsx","components/common/input.jsx","components/common/form.jsx","components/inputForm.jsx","components/uploadedImage.jsx","components/coins.jsx","components/statDisplay.jsx","components/home.jsx","components/jumbo.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Slider","this","props","onSliderChange","lowVal","highVal","min","max","className","role","id","type","value","onChange","e","sliders","index","totalSliders","minGap","newValue","nextIndex","otherID","pointerMax","parseInt","setValue","increasing","pointerMin","decreasing","Component","ModalPopUp","dismissModal","toggle","colour","onColourChange","modalStyles","backgroundColor","showModal","style","display","tabIndex","aria-hidden","data-dismiss","aria-label","onClick","align","color","disableAlpha","selectedColour","ColourPicker","state","toggleModal","setState","diameter","defaultValue","rest","circleStyle","borderRadius","cursor","width","height","lineHeight","textAlign","fontSize","boxShadow","Sliders","limits","enabledSliders","filter","s","enabled","map","slider","key","FileUpload","placeholder","Input","name","label","error","defaultProps","htmlFor","Form","data","errors","validate","Joi","schema","abortEarly","details","item","path","message","console","log","validateProperty","obj","handleChange","input","currentTarget","errorMessage","renderButton","disabled","renderInput","options","InputForm","time","coinSize","backgroundColour","number","required","precision","handleSliderChange","target","indexOf","length","handleColourChange","hex","autoComplete","UploadedImage","file","srcFormatter","src","alt","fluid","str","RegExp","test","validURL","URL","createObjectURL","Coins","inner","innerResponseData","outer","outerResponseData","viewBox","x","y","fill","bgColour","coinArray","row","i","j","cx","spacing","cy","r","aspectRatio","downloadDims","Math","round","canvas","document","createElement","svg","getElementById","cloneNode","XMLSerializer","downloadDimensions","setAttribute","serializeToString","win","window","webkitURL","img","Image","blob","Blob","url","onload","getContext","drawImage","revokeObjectURL","uri","toDataURL","a","body","appendChild","href","download","click","removeChild","mySVG","Date","now","buildSVG","handleOnClick","StatDisplay","totalCoins","totalTime","totalMass","Home","displayCanvas","displayUpload","stats","fetchInProgress","files","toast","inputData","isEmpty","formData","FormData","append","JSON","stringify","axios","method","headers","contentType","processData","then","res","handleReturn","catch","handleError","response","request","result","coin_array","bg_colour","imageStyle","mainStyle","Fragment","loading","handleFile","handleUpload","Jumbo","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,kC,4QC2H5BC,G,6KA3BH,IAAD,SAC+CC,KAAKC,MAAnDC,EADD,EACCA,eAAgBC,EADjB,EACiBA,OAAQC,EADzB,EACyBA,QAASC,EADlC,EACkCA,IAAKC,EADvC,EACuCA,IAC9C,OACE,yBAAKC,UAAU,OAAOC,KAAK,SACzB,2BACEC,GAAG,UACHF,UAAU,OACVG,KAAK,QACLL,IAAKA,EACLC,IAAKA,EACLK,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOX,EAAe,2BAAK,EAAKD,OAAX,IAAkBY,UAEnD,2BACEJ,GAAG,SACHF,UAAU,MACVG,KAAK,QACLL,IAAKA,EACLC,IAAKA,EACLK,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAOX,EAAe,2BAAK,EAAKD,OAAX,IAAkBY,c,kCAhHvCC,EAASb,GAAQ,IAAD,EACwBA,EAAhDc,EADwB,EACxBA,MAAOT,EADiB,EACjBA,IAAKK,EADY,EACZA,MAAOK,EADK,EACLA,aAAcP,EADT,EACSA,GAAIQ,EADb,EACaA,OACzCC,EAAWP,EAAQM,EACjBE,EAAYJ,EAAQ,EACpBK,EAAiB,WAAPX,EAAkB,UAAY,SACxCY,EACJf,GACCU,EAAeG,GAAaF,GACrB,WAAPR,GAAmBa,SAASL,GAAU,GACzC,GAAII,GAAcf,EAChB,OAAOQ,EAGTb,EAAK,2BAAQA,GAAR,IAAeU,MAAOO,EAAUH,MAAOI,IAC5C,IAAII,EAAWZ,EAGf,GAAIQ,GAAaH,EAKf,OAJIL,GAASU,IACXE,EAAWF,GAEbP,EAAQC,GAAON,GAAMK,EAAQC,EAAQ,GAAGK,GAAWG,EAC5CT,EAOT,GALAA,EAAQC,GAAON,GAAMc,EACd,WAAPd,EACKK,EAAQC,EAAQ,GAAGK,GAAWG,EAC9BT,EAAQK,GAAWC,GAAWG,EAE/BZ,GAASU,EACXE,EAAWF,EACXP,EAAQC,GAAON,GAAMc,EACd,WAAPd,EACKK,EAAQC,EAAQ,GAAGK,GAAWG,EAC9BT,EAAQK,GAAWC,GAAWG,EACnCT,EAAUd,KAAKwB,WAAWV,EAASb,OAC9B,IAAIU,EAAQG,EAAQK,GAAWV,GAAMQ,EAC1C,OAAOH,EACEb,EAAMQ,KAAQa,SAAShB,KAChCQ,EAAUd,KAAKwB,WAAWV,EAASb,IAGrC,OAAOa,I,iCAGSA,EAASb,GAAQ,IAAD,EACUA,EAAlCc,EADwB,EACxBA,MAAOV,EADiB,EACjBA,IAAKM,EADY,EACZA,MAAOF,EADK,EACLA,GAAIQ,EADC,EACDA,OAC3BC,EAAWP,EAAQM,EACjBE,EAAYJ,EAAQ,EACpBK,EAAiB,WAAPX,EAAkB,UAAY,SACxCgB,EACJpB,EAAMU,EAAQE,GAAiB,YAAPR,EAAmBa,SAASL,GAAU,GAChE,GAAIQ,GAAcpB,EAChB,OAAOS,EAGTb,EAAK,2BAAQA,GAAR,IAAeU,MAAOO,EAAUH,MAAOI,IAC5C,IAAII,EAAWZ,EAGf,OAAII,GAAS,GACPJ,GAASc,IACXF,EAAWE,GAEbX,EAAQC,GAAON,GAAMK,EAAQC,EAAQ,GAAGK,GAAWG,EAC5CT,IAELC,EAAQ,GAAKQ,EAAWE,GAC1BX,EAAQC,GAAON,GAAMc,EACd,WAAPd,EACKK,EAAQK,GAAWC,GAAWG,EAC9BT,EAAQC,EAAQ,GAAGK,GAAWG,EAE/BZ,GAASG,EAAQK,GAAWV,GAAMQ,IACpCH,EAAUd,KAAK0B,WAAWZ,EAASb,KAE5BU,GAASc,GAClBF,EAAWE,EACXX,EAAQC,GAAON,GAAMc,EACd,WAAPd,EACKK,EAAQK,GAAWC,GAAWG,EAC9BT,EAAQC,EAAQ,GAAGK,GAAWG,EAC/BR,EAAQ,IACVD,EAAUd,KAAK0B,WAAWZ,EAASb,KAGrCa,EAAQC,GAAON,GAAME,EAGhBG,O,GA1FUa,c,iBC8DNC,E,4MA7DbC,aAAe,WACb,EAAK5B,MAAM6B,U,uDAGH,IAAD,SAC4B9B,KAAKC,MAAhC8B,EADD,EACCA,OAAQC,EADT,EACSA,eACVC,EAAc,CAClBC,gBAAgB,GAAD,OAAKH,IAEtB,OACE,yBACExB,UAAS,kCACPP,KAAKC,MAAMkC,UAAY,OAAS,IAElCC,MAAO,CACLC,QAAQ,GAAD,OAAKrC,KAAKC,MAAMkC,UAAY,QAAU,SAE/C1B,GAAG,eACH6B,SAAS,KACT9B,KAAK,SACL+B,cAAY,QAEZ,yBACEhC,UAAU,8CACVC,KAAK,YAEL,yBAAKD,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcE,GAAG,yBAA/B,iBAGA,4BACEC,KAAK,SACLH,UAAU,QACViC,eAAa,QACbC,aAAW,QACXC,QAAS1C,KAAK6B,cAEd,0BAAMU,cAAY,QAAlB,UAGJ,yBACEhC,UAAU,uCACV6B,MAAOH,EACPU,MAAM,UAEN,kBAAC,eAAD,CACEC,MAAOb,EACPc,cAAc,EACdjC,SAAU,SAACkC,GAAD,OACRd,EAAe,2BAAK,EAAK/B,OAAX,IAAkB6C,+B,GAnDzBnB,aCmDVoB,E,4MAjDbC,MAAQ,CACNb,WAAW,G,EAGbc,YAAc,kBACZ,EAAKC,SAAS,CACZf,WAAY,EAAKa,MAAMb,a,uDAGjB,IAAD,EAOHnC,KAAKC,MALPkD,EAFK,EAELA,SACApB,EAHK,EAGLA,OACAqB,EAJK,EAILA,aACApB,EALK,EAKLA,eACGqB,EANE,qEAQDC,EAAc,CAClBV,MAAO,QACPW,aAAc,MACdC,OAAQ,UACRC,MAAM,GAAD,OAAKN,EAAL,MACLO,OAAO,GAAD,OAAKP,EAAL,MACNQ,WAAW,GAAD,OAAKR,EAAL,MACVS,UAAW,SACXC,SAAU,OACVC,UAAW,4BAEb,OACE,yBAAKvD,UAAU,8BACb,yBACEA,UAAU,WACV6B,MAAK,2BAAOkB,GAAP,IAAoBpB,gBAAiBH,IAC1CW,QAAS1C,KAAKiD,aAEbG,GAEH,kBAAC,EAAD,eACEtB,OAAQ9B,KAAKiD,YACbd,UAAWnC,KAAKgD,MAAMb,UACtBJ,OAAQA,EACRC,eAAgBA,GACZqB,S,GA3Ca1B,aCuDZoC,E,uKArDH,IAAD,EACqD/D,KAAKC,MAAzDa,EADD,EACCA,QAASkD,EADV,EACUA,OAAQhC,EADlB,EACkBA,eAAgB9B,EADlC,EACkCA,eACnC+D,EAAiBnD,EAAQoD,QAAO,SAACC,GAAD,OAAOA,EAAEC,WAE/C,OACE,yBAAK7D,UAAU,iBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,uCACb,mCAEF,yBAAKA,UAAU,uCACb,oCAGH0D,EAAeI,KAAI,SAACC,GAAD,OAClB,yBAAK/D,UAAU,aAAagE,IAAKD,EAAO7D,IACtC,yBAAK8D,IAAK,UAAYD,EAAO7D,GAAIF,UAAU,QAAQoC,MAAM,UACvD,kBAAC,EAAD,CACEZ,OAAQuC,EAAOvC,OACfuC,OAAQA,EACRnB,SAAS,KACTC,aAAckB,EAAOnE,OACrBM,GAAG,SACHuB,eAAgBA,KAGpB,yBAAKuC,IAAK,SAAWD,EAAO7D,GAAIF,UAAU,WACxC,kBAAC,EAAD,CACEF,IAAK2D,EAAO3D,IACZC,IAAK0D,EAAO1D,IACZgE,OAAQA,EACRnE,OAAQmE,EAAOnE,OACfC,QAASkE,EAAOlE,QAChBF,eAAgBA,KAGpB,yBAAKqE,IAAK,UAAYD,EAAO7D,GAAIF,UAAU,SAASoC,MAAM,UACxD,kBAAC,EAAD,CACEZ,OAAQuC,EAAOvC,OACfuC,OAAQA,EACRnB,SAAS,KACTC,aAAckB,EAAOlE,QACrBK,GAAG,SACHuB,eAAgBA,c,GA5CVL,aC0BP6C,E,uKA5BH,IAAD,EACuBxE,KAAKC,MAA3ByC,EADD,EACCA,QAAS9B,EADV,EACUA,SACjB,OACE,yBAAKL,UAAU,eACb,yBAAKA,UAAU,WACb,yBAAKE,GAAG,OAAOF,UAAU,eACvB,2BACEG,KAAK,OACLH,UAAU,gBACVkE,YAAY,eACZ7D,SAAUA,IAEZ,0BAAML,UAAU,sCACd,4BACEG,KAAK,SACLH,UAAU,kBACVmC,QAASA,GAHX,mB,GAdWf,a,kCCoBV+C,EApBD,SAARA,EAAS,GAAmD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,MAAmC,IAA5BnE,YAA4B,MAArB,MAAqB,EAAX2C,EAAW,+CAG/D,OADAqB,EAAMI,aAAe,CAAEpE,KAAM,OAE3B,yBAAKH,UAAU,kBACb,uBAAGA,UAAU,oCAAoCwE,QAASJ,GACvDC,GAEH,yCACErE,UAAU,4BACN8C,EAFN,CAGEsB,KAAMA,EACNlE,GAAIkE,EACJjE,KAAMA,KAEPmE,GAAS,yBAAKtE,UAAU,sBAAsBsE,KC4DtCG,E,4MAtEbhC,MAAQ,CACNiC,KAAM,GACNC,OAAQ,I,EAGVC,SAAW,WACT,IACQN,EAAUO,IAAID,SAAS,EAAKnC,MAAMiC,KAAM,EAAKI,OADrC,CAAEC,YAAY,IACtBT,MACR,IAAKA,EAAO,OAAO,KAEnB,IALe,EAKTK,EAAS,GALA,cAMEL,EAAMU,SANR,IAMf,gCAASC,EAAT,QAAgCN,EAAOM,EAAKC,KAAK,IAAMD,EAAKE,SAN7C,8BAQf,OADAC,QAAQC,IAAIV,GACLA,G,EAGTW,iBAAmB,YAAsB,IAAnBlB,EAAkB,EAAlBA,KAAMhE,EAAY,EAAZA,MACpBmF,EAAG,eAAMnB,EAAOhE,GAChB0E,EAAM,eAAMV,EAAO,EAAKU,OAAOV,IAC7BE,EAAUO,IAAID,SAASW,EAAKT,GAA5BR,MACR,OAAOA,EAAQA,EAAMU,QAAQ,GAAGG,QAAU,M,EAc5CK,aAAe,YAA+B,IAAbC,EAAY,EAA3BC,cACVf,EAAM,eAAQ,EAAKlC,MAAMkC,QACzBD,EAAI,eAAQ,EAAKjC,MAAMiC,MACvBiB,EAAe,EAAKL,iBAAiBG,GACvCE,EACFhB,EAAOc,EAAMrB,MAAQuB,UAEdhB,EAAOc,EAAMrB,MACpBM,EAAKe,EAAMrB,MAAQqB,EAAMrF,OAE3B,EAAKuC,SAAS,CAAE+B,OAAMC,Y,EAGxBiB,aAAe,SAACvB,GACd,OACE,4BAAQwB,SAAU,EAAKjB,WAAY5E,UAAU,mBAC1CqE,I,EAKPyB,YAAc,SAACC,GAAa,IAClBpB,EAAW,EAAKlC,MAAhBkC,OACAP,EAAkB2B,EAAlB3B,KAAStB,EAFQ,YAECiD,EAFD,UAIzB,OACE,kBAAC,EAAD,eACE3B,KAAMA,EACN/D,SAAU,EAAKmF,aACflB,MAAOK,EAAOP,IACVtB,K,YAnEO1B,aCuIJ4E,G,kNAhIbvD,MAAQ,CACNgB,OAAQ,CAAE3D,IAAK,EAAGC,IAAK,KACvBQ,QAAS,CACP,CAAEL,GAAI,EAAGN,OAAQ,EAAGC,QAAS,GAAIgE,SAAS,EAAMrC,OAAQ,WACxD,CAAEtB,GAAI,EAAGN,OAAQ,GAAIC,QAAS,IAAKgE,SAAS,EAAMrC,OAAQ,WAC1D,CAAEtB,GAAI,EAAGN,OAAQ,IAAKC,QAAS,IAAKgE,SAAS,EAAMrC,OAAQ,WAC3D,CAAEtB,GAAI,EAAGN,OAAQ,IAAKC,QAAS,IAAKgE,SAAS,EAAMrC,OAAQ,YAI7Dd,OAAQ,GACRgE,KAAM,CAAExB,MAAO,KAAM+C,KAAM,GAAIC,SAAU,MACzCvB,OAAQ,GACRwB,iBAAkB,W,EAGpBrB,OAAS,CACP5B,MAAO2B,IAAIuB,SAAStG,IAAI,KAAKC,IAAI,KAAMsG,WAAWhC,MAAM,eACxD4B,KAAMpB,IAAIuB,SAAStG,IAAI,GAAGC,IAAI,KAAKsG,WAAWhC,MAAM,mBACpD6B,SAAUrB,IAAIuB,SACXE,UAAU,GACVxG,IAAI,IACJC,IAAI,IACJsG,WACAhC,MAAM,wB,EAGXkC,mBAAqB,SAAC7G,GAAW,IAAD,EACJ,EAAK+C,MAAzB/B,EADwB,EACxBA,OAAQH,EADgB,EAChBA,QACVH,EAAQW,SAASrB,EAAMY,EAAEkG,OAAOpG,OAFN,EAGLV,EAAMY,EAAEkG,OAAzBtG,EAHsB,EAGtBA,GAAIJ,EAHkB,EAGlBA,IAAKC,EAHa,EAGbA,KACjBL,EAAK,2BACAA,GADA,IAEHc,MAAOD,EAAQkG,QAAQ/G,EAAMqE,QAC7B3D,MAAOA,EACPK,aAAcF,EAAQmG,OACtBxG,GAAIA,EACJQ,OAAQA,KAEAR,KAAQa,SAASjB,IAAQJ,EAAMQ,KAAQa,SAAShB,KAKxDQ,EADEH,EAAQV,EAAMQ,GACNV,EAAOyB,WAAWV,EAASb,GAE3BF,EAAO2B,WAAWZ,EAASb,GAGvC,EAAKiD,SAAS,CAAEpC,c,EAGlBoG,mBAAqB,SAACjH,GAEpB,GAAW,WADIA,EAAPQ,GACa,CACnB,IAAIK,EAAO,YAAO,EAAKkC,MAAMlC,SACvBC,EAAQD,EAAQkG,QAAQ/G,EAAMqE,QACpCxD,EAAQC,GAAOgB,OAAS9B,EAAM6C,eAAeqE,IAC7C,EAAKjE,SAAS,CAAEpC,iBAEhB,EAAKoC,SAAS,CAAEwD,iBAAkBzG,EAAM6C,eAAeqE,O,uDAIjD,IAAD,SACqDnH,KAAKgD,MAAzDgB,EADD,EACCA,OAAQlD,EADT,EACSA,QAASG,EADlB,EACkBA,OAAQyF,EAD1B,EAC0BA,iBAAkBzB,EAD5C,EAC4CA,KAD5C,EAGuBjF,KAAKC,MAA3ByC,EAHD,EAGCA,QAAS9B,EAHV,EAGUA,SAEjB,OACE,0BAAMwG,aAAa,MAAM7G,UAAU,4BACjC,yBAAKA,UAAU,QACb,kBAAC,EAAD,CACEK,SAAUA,EACV8B,QAAS,kBAAMA,EAAQ,eAAK,EAAKM,YAGrC,yBAAKzC,UAAU,QACb,kBAAC,EAAD,CACEyD,OAAQA,EACRlD,QAASA,EACTG,OAAQA,EACRf,eAAgBF,KAAK8G,mBACrB9E,eAAgBhC,KAAKkH,sBAGzB,yBAAK3G,UAAU,gBACb,yBAAKA,UAAU,2BACZP,KAAKqG,YAAY,CAChB1B,KAAM,QACNC,MAAO,sBACPxB,aAAc6B,EAAKxB,SAGvB,yBAAKlD,UAAU,0BACZP,KAAKqG,YAAY,CAChB1B,KAAM,OACNC,MAAO,mBACPxB,aAAc6B,EAAKuB,QAGvB,yBAAKjG,UAAU,0BACZP,KAAKqG,YAAY,CAChB1B,KAAM,WACNC,MAAO,sBACPxB,aAAc6B,EAAKwB,aAIzB,yBAAKlG,UAAU,8BACb,yBAAKA,UAAU,qBACb,0DAEF,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CACEwB,OAAQ2E,EACRvD,SAAS,KACTC,aAAa,GACb3C,GAAG,KACHuB,eAAgBhC,KAAKkH,4B,GAxHXlC,I,QCsBTqC,E,uKATX,IAAMC,EAAOD,EAAcE,aAAavH,KAAKC,MAAMqH,MACnD,OACE,6BACE,kBAAC,IAAD,CAAOE,IAAKF,EAAMG,IAAI,yBAAyBC,OAAK,Q,gCArB1CC,GAUd,QATc,IAAIC,OAChB,wKAMA,KAEeC,KAAKF,K,mCAGJL,GAClB,OAAOD,EAAcS,SAASR,GAAQA,EAAOS,IAAIC,gBAAgBV,O,GAfzC3F,aCqHbsG,E,yKAnHD,IAAD,EACsDjI,KAAKC,MAAzCiI,EADlB,EACDC,kBAA6CC,EAD5C,EACyBC,kBAgDlC,OA3CE,yBACEC,QAAO,cALK,EAKIF,EAAM3E,MAAf,YALK,EAK6B2E,EAAM1E,QAC/CjD,GAAG,iBAEH,0BACE8H,EAAE,IACFC,EAAE,IACF/E,MAXU,EAWH2E,EAAM3E,MACbC,OAZU,EAYF0E,EAAM1E,OACd+E,KAAML,EAAMM,WAEd,2BACGN,EAAMO,UAAUtE,KAAI,SAACuE,EAAKC,GAAN,OACnB,uBAAGtE,IAAG,eAAUsE,IACbD,EAAIvE,KAAI,SAACtC,EAAQ+G,GAAT,OACP,4BACEvE,IAAG,eAAUsE,GAAV,OAAcC,GACjBC,GArBE,EAqBED,EApBHE,GAqBDC,GAtBE,EAsBEJ,EArBHG,GAsBDE,EAAE,MACFT,KAAM1G,YAMhB,2BACGmG,EAAMS,UAAUtE,KAAI,SAACuE,EAAKC,GAAN,OACnB,uBAAGtE,IAAG,eAAUsE,IACbD,EAAIvE,KAAI,SAACtC,EAAQ+G,GAAT,OACP,4BACEvE,IAAG,eAAUsE,GAAV,OAAcC,GACjBC,GApCE,EAoCED,EApCF,EAqCFG,GArCE,EAqCEJ,EArCF,EAsCFK,EAAE,MACFT,KAAM1G,e,2CAWA,IACOqG,EAAUpI,KAAKC,MAAlCoI,kBACFc,EAAcf,EAAM1E,OAAS0E,EAAM3E,MACrC2F,EAAe,CAAE3F,MAAO,EAAGC,OAAQ,GAGvC,OAFA0F,EAAa3F,MAAQ,IACrB2F,EAAa1F,OAAS2F,KAAKC,MAAMF,EAAa3F,MAAQ0F,GAC/CC,I,sCAIP,IAAIG,EAASC,SAASC,cAAc,SAAU,CAAEhJ,GAAI,MAEhDiJ,EADWF,SAASG,eAAe,iBACpBC,WAAU,GACzBzF,EAAI,IAAI0F,cAJE,EAKY7J,KAAK8J,qBAAvBrG,EALM,EAKNA,MAAOC,EALD,EAKCA,OACTiB,EAAI,oBAAgBlB,EAAhB,YAAyBC,EAAzB,QACVgG,EAAIK,aAAa,QAAStG,GAC1BiG,EAAIK,aAAa,SAAUrG,GAC3BgG,EAAIK,aAAa,OAAQpF,GACzB4E,EAAO9F,MAAQA,EACf8F,EAAO7F,OAASA,EAChB,IAAIuB,EAAOd,EAAE6F,kBAAkBN,GAC3BO,EAAMC,OAAOnC,KAAOmC,OAAOC,WAAaD,OACxCE,EAAM,IAAIC,MACVC,EAAO,IAAIC,KAAK,CAACtF,GAAO,CAAEvE,KAAM,kBAChC8J,EAAMP,EAAIjC,gBAAgBsC,GAE9BF,EAAIK,OAAS,WACXlB,EAAOmB,WAAW,MAAMC,UAAUP,EAAK,EAAG,GAC1CH,EAAIW,gBAAgBJ,GACpB,IAAIK,EAAMtB,EAAOuB,UAAU,aACvBC,EAAIvB,SAASC,cAAc,KAC/BD,SAASwB,KAAKC,YAAYF,GAC1BA,EAAE3I,MAAQ,gBACV2I,EAAEG,KAAOL,EACTE,EAAEI,SAAWxG,EACboG,EAAEK,QACFlB,OAAOnC,IAAI6C,gBAAgBC,GAC3BrB,SAASwB,KAAKK,YAAYN,IAE5BX,EAAI5C,IAAMgD,I,+BAGF,IAAD,OAEDc,GADUC,KAAKC,MACPxL,KAAKyL,YACLF,KAAKC,MAEnB,OACE,yBAAKjL,UAAU,sBACZ+K,EACD,4BACE5I,QAAS,SAAC4I,GAAD,OAAW,EAAKI,cAAcJ,IACvC/K,UAAU,uBAFZ,kBAMA,yBAAKE,GAAG,MACR,kC,GAjHYkB,a,qDCgCLgK,G,8KAhCH,IACA1G,EAASjF,KAAKC,MAAdgF,KACA2G,EAAqC3G,EAArC2G,WAAYC,EAAyB5G,EAAzB4G,UAAWC,EAAc7G,EAAd6G,UAC/B,OAME,yBAAKvL,UAAU,aACb,kDACA,2BAAOA,UAAU,UACf,+BACE,4BACE,wBAAIA,UAAU,eAAd,gBACA,wBAAIA,UAAU,eAAeqL,IAE/B,4BACE,wBAAIrL,UAAU,eAAd,eACA,wBAAIA,UAAU,eAAesL,IAE/B,4BACE,wBAAItL,UAAU,eAAd,mBACA,wBAAIA,UAAU,eAAeuL,EAA7B,e,GAxBYnK,cC4KXoK,E,4MAhKb/I,MAAQ,CACNsE,KAAM,2CACN0E,eAAe,EACfC,eAAe,EACf5D,kBAAmB,CACjB5E,MAAO,KACPC,OAAQ,KACRiF,UAAW,KACXD,SAAU,KACV5H,QAAS,KACToL,MAAO,MAET/D,kBAAmB,CACjB1E,MAAO,GACPC,OAAQ,GACRiF,UAAW,IAEbwD,iBAAiB,G,yDAGRtL,GACT,IAAIyG,EAAOzG,EAAEkG,OAAOqF,MAAM,GAEN,qBAAT9E,EACTtH,KAAKkD,SAAS,CAAEoE,KAAM,6CACC,eAAdA,EAAK5G,MAAuC,cAAd4G,EAAK5G,MAC5CG,EAAEkG,OAAOpG,MAAQ,KACjBX,KAAKkD,SAAS,CAAEoE,KAAM,6CACtB+E,IAAMxH,MAAM,mCAEZ7E,KAAKkD,SAAS,CAAEoE,OAAM2E,eAAe,EAAMD,eAAe,M,4EAI3CM,G,mFACThF,EAAStH,KAAKgD,MAAdsE,MACJD,EAAcS,SAASR,G,uBACzB+E,IAAMxH,MAAM,2B,6BAGT0H,kBAAQD,EAAUpH,Q,uBACrBmH,IAAMxH,MAAM,6C,iCAGV2H,EAAW,IAAIC,UACVC,OAAO,QAASpF,GACzBkF,EAASE,OAAO,YAAaC,KAAKC,UAAUN,IAC5CtM,KAAKkD,SAAS,CAAEiJ,iBAAiB,I,UAC3BU,IAAM,CACVrC,IAAI,sDACJsC,OAAQ,OACRC,QAAS,CACP,eAAgB,uBAElB9H,KAAMuH,EACNQ,aAAa,EACbC,aAAa,IAEZC,MAAK,SAACC,GACL,EAAKC,aAAaD,EAAIlI,SAEvBoI,OAAM,SAACxI,GACN,EAAKyI,YAAYzI,M,0IAIXA,GACNA,EAAM0I,SACRlB,IAAMxH,MAAN,UAAeA,EAAM0I,SAArB,yCACS1I,EAAM2I,QACfnB,IAAMxH,MAAN,UAAeA,EAAM2I,QAArB,yCAEAnB,IAAMxH,MAAN,UAAeA,EAAf,2C,mCAIS4I,GAAS,IAAD,EAC4BzN,KAAKgD,MAA9CmF,EADa,EACbA,kBAAmBE,EADN,EACMA,kBADN,EAQfoF,EAAOrF,MAGX,GAFAC,EAAoB,CAAE5E,MATH,EAGjBA,MAM2BC,OATV,EAIjBA,OAKmCiF,UATlB,EAKjB+E,WAI8ChF,SAT7B,EAMjBiF,UAGwDzB,MATvC,EAOjBA,OAGFvG,QAAQC,IAAI6H,GACS,SAAjBA,EAAOvF,MAAkB,CAAC,IAAD,EACsBuF,EAAOvF,MACxDC,EAAoB,CAAE1E,MAFK,EACnBA,MACqBC,OAFF,EACZA,OACsBiF,UAFV,EACJ+E,YAGzB1N,KAAKkD,SAAS,CACZ8I,eAAe,EACf7D,oBACAE,oBACA8D,iBAAiB,M,+BAIX,IAAD,SAOHnM,KAAKgD,MALPgJ,EAFK,EAELA,cACAC,EAHK,EAGLA,cACA9D,EAJK,EAILA,kBACAE,EALK,EAKLA,kBAIEuF,EAAa,GACbC,EAAY,GAOhB,OAjBO,EAML1B,gBAOA0B,EAAY,CAAExL,QAAS,QAEvBuL,EAAa,CAAEvL,QAAS,QAGxB,kBAAC,IAAMyL,SAAP,KACE,yBAAK1L,MAAOwL,GACV,yBAAKrN,UAAU,aACb,kBAAC,IAAD,CAAOiH,IAAKuG,IAAStG,IAAI,aAAaC,OAAK,MAI/C,yBAAKtF,MAAOyL,GACV,kBAAC,IAAD,MACA,yBAAKtN,UAAU,aACb,yBAAKA,UAAU,mCACZyL,EACC,kBAAC,EAAD,CAAa/G,KAAMoD,EAAkB6D,QACnC,MAEN,yBAAK3L,UAAU,mCACb,yBAAKA,UAAU,sBACZ0L,EACC,kBAAC,EAAD,CAAe3E,KAAMtH,KAAKgD,MAAMsE,OAC9B,MAEN,yBAAK/G,UAAU,sBACZyL,EACC,kBAAC,EAAD,CACE7D,kBAAmBA,EACnBE,kBAAmBA,IAEnB,OAGR,yBAAK9H,UAAU,QACb,kBAAC,EAAD,CACEK,SAAU,SAACC,GAAD,OAAO,EAAKmN,WAAWnN,IACjC6B,QAAS,SAAC7B,GAAD,OAAO,EAAKoN,aAAapN,c,GAvJ/Bc,aCMJuM,E,uKAdX,OACE,yBAAK3N,UAAU,sCACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,cAAd,eACA,uBAAGA,UAAU,QAAb,sF,GANUoB,aCgBLwM,E,4MAbbnL,MAAQ,G,uDAEN,OACE,kBAAC,IAAM8K,SAAP,KACE,kBAAC,EAAD,MACA,0BAAMvN,UAAU,OACd,kBAAC,EAAD,Y,GAPQoB,aCOEyM,QACW,cAA7BlE,OAAOmE,SAASC,UAEe,UAA7BpE,OAAOmE,SAASC,UAEhBpE,OAAOmE,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlF,SAASG,eAAe,SDwHpB,kBAAmBgF,WACrBA,UAAUC,cAAcC,MACrB3B,MAAK,SAAA4B,GACJA,EAAaC,gBAEd1B,OAAM,SAAAxI,GACLc,QAAQd,MAAMA,EAAMa,a","file":"static/js/main.d406e4d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slow.b813673f.gif\";","import React, { Component } from \"react\";\nimport \"./sliders.scss\";\n\nclass Slider extends Component {\n  static increasing(sliders, props) {\n    const { index, max, value, totalSliders, id, minGap } = props;\n    let newValue = value + minGap;\n    const nextIndex = index + 1;\n    const otherID = id === \"lowVal\" ? \"highVal\" : \"lowVal\";\n    const pointerMax =\n      max -\n      (totalSliders - nextIndex) * minGap +\n      (id === \"lowVal\" ? -parseInt(minGap) : 0);\n    if (pointerMax >= max) {\n      return sliders;\n    }\n    //Update props:\n    props = { ...props, value: newValue, index: nextIndex };\n    let setValue = value;\n\n    //Only called for lower value bottom slider.\n    if (nextIndex >= totalSliders) {\n      if (value >= pointerMax) {\n        setValue = pointerMax;\n      }\n      sliders[index][id] = sliders[index - 1][otherID] = setValue;\n      return sliders;\n    }\n    sliders[index][id] = setValue;\n    id === \"lowVal\"\n      ? (sliders[index - 1][otherID] = setValue)\n      : (sliders[nextIndex][otherID] = setValue);\n\n    if (value >= pointerMax) {\n      setValue = pointerMax;\n      sliders[index][id] = setValue;\n      id === \"lowVal\"\n        ? (sliders[index - 1][otherID] = setValue)\n        : (sliders[nextIndex][otherID] = setValue);\n      sliders = this.increasing(sliders, props);\n    } else if (value < sliders[nextIndex][id] - minGap) {\n      return sliders;\n    } else if (props[id] !== parseInt(max)) {\n      sliders = this.increasing(sliders, props);\n    }\n\n    return sliders;\n  }\n\n  static decreasing(sliders, props) {\n    const { index, min, value, id, minGap } = props;\n    let newValue = value - minGap;\n    const nextIndex = index - 1;\n    const otherID = id === \"lowVal\" ? \"highVal\" : \"lowVal\";\n    const pointerMin =\n      min + index * minGap + (id === \"highVal\" ? parseInt(minGap) : 0);\n    if (pointerMin <= min) {\n      return sliders;\n    }\n    //Update props:\n    props = { ...props, value: newValue, index: nextIndex };\n    let setValue = value;\n\n    //Only called for higher value of top slider.\n    if (index <= 0) {\n      if (value <= pointerMin) {\n        setValue = pointerMin;\n      }\n      sliders[index][id] = sliders[index + 1][otherID] = setValue;\n      return sliders;\n    }\n    if (index > 0 && setValue > pointerMin) {\n      sliders[index][id] = setValue;\n      id === \"lowVal\"\n        ? (sliders[nextIndex][otherID] = setValue)\n        : (sliders[index + 1][otherID] = setValue);\n\n      if (value <= sliders[nextIndex][id] + minGap) {\n        sliders = this.decreasing(sliders, props);\n      }\n    } else if (value <= pointerMin) {\n      setValue = pointerMin;\n      sliders[index][id] = setValue;\n      id === \"lowVal\"\n        ? (sliders[nextIndex][otherID] = setValue)\n        : (sliders[index + 1][otherID] = setValue);\n      if (index > 0) {\n        sliders = this.decreasing(sliders, props);\n      }\n    } else {\n      sliders[index][id] = value;\n    }\n\n    return sliders;\n  }\n\n  render() {\n    const { onSliderChange, lowVal, highVal, min, max } = this.props;\n    return (\n      <div className=\"wrap\" role=\"group\">\n        <input\n          id=\"highVal\"\n          className=\"high\"\n          type=\"range\"\n          min={min}\n          max={max}\n          value={highVal}\n          onChange={(e) => onSliderChange({ ...this.props, e })}\n        />\n        <input\n          id=\"lowVal\"\n          className=\"low\"\n          type=\"range\"\n          min={min}\n          max={max}\n          value={lowVal}\n          onChange={(e) => onSliderChange({ ...this.props, e })}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","import React, { Component } from \"react\";\nimport { ChromePicker } from \"react-color\";\n\nclass ModalPopUp extends Component {\n  dismissModal = () => {\n    this.props.toggle();\n  };\n\n  render() {\n    const { colour, onColourChange } = this.props;\n    const modalStyles = {\n      backgroundColor: `${colour}`,\n    };\n    return (\n      <div\n        className={`modal fade WelcomeModal ${\n          this.props.showModal ? \"show\" : \"\"\n        }`}\n        style={{\n          display: `${this.props.showModal ? \"block\" : \"none\"}`,\n        }}\n        id=\"WelcomeModal\"\n        tabIndex=\"-1\"\n        role=\"dialog\"\n        aria-hidden=\"true\"\n      >\n        <div\n          className=\"modal-dialog modal-lg modal-dialog-centered\"\n          role=\"document\"\n        >\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\n                Select Colour\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={this.dismissModal}\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div\n              className=\"modal-body align-center modal-opened\"\n              style={modalStyles}\n              align=\"center\"\n            >\n              <ChromePicker\n                color={colour}\n                disableAlpha={true}\n                onChange={(selectedColour) =>\n                  onColourChange({ ...this.props, selectedColour })\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ModalPopUp;\n","import React, { Component } from \"react\";\nimport ModalPopUp from \"./modalPopUp\";\nimport \"./sliders.scss\";\n\nclass ColourPicker extends Component {\n  state = {\n    showModal: false,\n  };\n\n  toggleModal = () =>\n    this.setState({\n      showModal: !this.state.showModal,\n    });\n\n  render() {\n    const {\n      diameter,\n      colour,\n      defaultValue,\n      onColourChange,\n      ...rest\n    } = this.props;\n    const circleStyle = {\n      color: \"white\",\n      borderRadius: \"50%\",\n      cursor: \"pointer\",\n      width: `${diameter}px`,\n      height: `${diameter}px`,\n      lineHeight: `${diameter}px`,\n      textAlign: \"center\",\n      fontSize: \"16pt\",\n      boxShadow: \"-5px 5px 5px 5px #c9c9c9\",\n    };\n    return (\n      <div className=\"row justify-content-center\">\n        <div\n          className=\"noselect\"\n          style={{ ...circleStyle, backgroundColor: colour }}\n          onClick={this.toggleModal}\n        >\n          {defaultValue}\n        </div>\n        <ModalPopUp\n          toggle={this.toggleModal}\n          showModal={this.state.showModal}\n          colour={colour}\n          onColourChange={onColourChange}\n          {...rest}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ColourPicker;\n","import React, { Component } from \"react\";\nimport Slider from \"./slider\";\nimport ColourPicker from \"./colourPicker\";\nimport \"./sliders.scss\";\n\nclass Sliders extends Component {\n  render() {\n    const { sliders, limits, onColourChange, onSliderChange } = this.props;\n    const enabledSliders = sliders.filter((s) => s.enabled);\n\n    return (\n      <div className=\"container m-2\">\n        <div className=\"row justify-content-between\">\n          <div className=\"col-2 d-flex justify-content-center\">\n            <p>MIN</p>\n          </div>\n          <div className=\"col-2 d-flex justify-content-center\">\n            <p>MAX</p>\n          </div>\n        </div>\n        {enabledSliders.map((slider) => (\n          <div className=\"slider-row\" key={slider.id}>\n            <div key={\"colour1\" + slider.id} className=\"col-2\" align=\"center\">\n              <ColourPicker\n                colour={slider.colour}\n                slider={slider}\n                diameter=\"40\"\n                defaultValue={slider.lowVal}\n                id=\"slider\"\n                onColourChange={onColourChange}\n              />\n            </div>\n            <div key={\"slider\" + slider.id} className=\" col-8 \">\n              <Slider\n                min={limits.min}\n                max={limits.max}\n                slider={slider}\n                lowVal={slider.lowVal}\n                highVal={slider.highVal}\n                onSliderChange={onSliderChange}\n              ></Slider>\n            </div>\n            <div key={\"colour2\" + slider.id} className=\"col-2 \" align=\"center\">\n              <ColourPicker\n                colour={slider.colour}\n                slider={slider}\n                diameter=\"40\"\n                defaultValue={slider.highVal}\n                id=\"slider\"\n                onColourChange={onColourChange}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Sliders;\n","import React, { Component } from \"react\";\n\nclass FileUpload extends Component {\n  render() {\n    const { onClick, onChange } = this.props;\n    return (\n      <div className=\"container  \">\n        <div className=\"row p-4\">\n          <div id=\"drop\" className=\"input-group\">\n            <input\n              type=\"file\"\n              className=\"form-control \"\n              placeholder=\"Upload Image\"\n              onChange={onChange}\n            />\n            <span className=\"input-group-btn input-group-append\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={onClick}\n              >\n                Process\n              </button>\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FileUpload;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, type = \"tel\", ...rest }) => {\n  //Modified from Mosh Hamedani React course source-code\n  Input.defaultProps = { type: \"tel\" };\n  return (\n    <div className=\"form-group m-2\">\n      <p className=\"justify-content-center d-flex m-2\" htmlFor={name}>\n        {label}\n      </p>\n      <input\n        className=\"form-control text-center\"\n        {...rest}\n        name={name}\n        id={name}\n        type={type}\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\n\nclass Form extends Component {\n  //Modified from Mosh Hamedani React course source-code\n\n  state = {\n    data: {},\n    errors: {},\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    console.log(errors);\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  // handleSubmit = (e) => {\n  //   e.preventDefault();\n\n  //   const errors = this.validate();\n  //   //If truthy return the errors object but if falsy return an empty object\n  //   this.setState({ errors: errors || {} });\n  //   if (errors) return;\n\n  //   this.doSubmit();\n  // };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const data = { ...this.state.data };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) {\n      errors[input.name] = errorMessage;\n    } else {\n      delete errors[input.name];\n      data[input.name] = input.value;\n    }\n    this.setState({ data, errors });\n  };\n\n  renderButton = (label) => {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  };\n\n  renderInput = (options) => {\n    const { errors } = this.state;\n    const { name, ...rest } = options;\n\n    return (\n      <Input\n        name={name}\n        onChange={this.handleChange}\n        error={errors[name]}\n        {...rest}\n      />\n    );\n  };\n}\n\nexport default Form;\n","import React from \"react\";\nimport Slider from \"./slider\";\nimport Sliders from \"./sliders\";\nimport FileUpload from \"./fileUpload\";\nimport ColourPicker from \"./colourPicker\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport \"./sliders.scss\";\nimport \"./styling.scss\";\n\nclass InputForm extends Form {\n  state = {\n    limits: { min: 0, max: 255 },\n    sliders: [\n      { id: 0, lowVal: 0, highVal: 50, enabled: true, colour: \"#2B0D01\" },\n      { id: 1, lowVal: 50, highVal: 100, enabled: true, colour: \"#612B09\" },\n      { id: 2, lowVal: 100, highVal: 200, enabled: true, colour: \"#8C3D0E\" },\n      { id: 3, lowVal: 200, highVal: 255, enabled: true, colour: \"#C2580C\" },\n      // { id: 4, lowVal: 200, highVal: 255, enabled: true, colour: \"#BD7616\" },\n    ],\n\n    minGap: 10,\n    data: { width: 1600, time: 30, coinSize: 20.3 },\n    errors: {},\n    backgroundColour: \"#000000\",\n  };\n\n  schema = {\n    width: Joi.number().min(100).max(3000).required().label(\"Width in mm\"),\n    time: Joi.number().min(5).max(300).required().label(\"Time in seconds\"),\n    coinSize: Joi.number()\n      .precision(1)\n      .min(15)\n      .max(30)\n      .required()\n      .label(\"Coin diameter in mm\"),\n  };\n\n  handleSliderChange = (props) => {\n    let { minGap, sliders } = this.state;\n    let value = parseInt(props.e.target.value);\n    const { id, min, max } = props.e.target;\n    props = {\n      ...props,\n      index: sliders.indexOf(props.slider),\n      value: value,\n      totalSliders: sliders.length,\n      id: id,\n      minGap: minGap,\n    };\n    if (props[id] === parseInt(min) || props[id] === parseInt(max)) {\n      return;\n    }\n\n    if (value > props[id]) {\n      sliders = Slider.increasing(sliders, props);\n    } else {\n      sliders = Slider.decreasing(sliders, props);\n    }\n\n    this.setState({ sliders });\n  };\n\n  handleColourChange = (props) => {\n    const { id } = props;\n    if (id === \"slider\") {\n      let sliders = [...this.state.sliders];\n      const index = sliders.indexOf(props.slider);\n      sliders[index].colour = props.selectedColour.hex;\n      this.setState({ sliders });\n    } else {\n      this.setState({ backgroundColour: props.selectedColour.hex });\n    }\n  };\n\n  render() {\n    const { limits, sliders, minGap, backgroundColour, data } = this.state;\n\n    const { onClick, onChange } = this.props;\n\n    return (\n      <form autoComplete=\"off\" className=\"my-container-clipped p-2\">\n        <div className=\"row \">\n          <FileUpload\n            onChange={onChange}\n            onClick={() => onClick({ ...this.state })}\n          />\n        </div>\n        <div className=\"row \">\n          <Sliders\n            limits={limits}\n            sliders={sliders}\n            minGap={minGap}\n            onSliderChange={this.handleSliderChange}\n            onColourChange={this.handleColourChange}\n          />\n        </div>\n        <div className=\"row p-2 mt-2\">\n          <div className=\"col-xs-12 col-md-4 p-2 \">\n            {this.renderInput({\n              name: \"width\",\n              label: \"Desired width in mm\",\n              defaultValue: data.width,\n            })}\n          </div>\n          <div className=\"col-xs-12 col-md-4 p-2\">\n            {this.renderInput({\n              name: \"time\",\n              label: \"Seconds per coin\",\n              defaultValue: data.time,\n            })}\n          </div>\n          <div className=\"col-xs-12 col-md-4 p-2\">\n            {this.renderInput({\n              name: \"coinSize\",\n              label: \"Coin diameter in mm\",\n              defaultValue: data.coinSize,\n            })}\n          </div>\n        </div>\n        <div className=\"row align-items-center m-2\">\n          <div className=\"col-6 text-center\">\n            <h4>Select background colour:</h4>\n          </div>\n          <div className=\"col-6 text-center\">\n            <ColourPicker\n              colour={backgroundColour}\n              diameter=\"80\"\n              defaultValue=\"\"\n              id=\"bg\"\n              onColourChange={this.handleColourChange}\n            />\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default InputForm;\n","import React, { Component } from \"react\";\nimport Image from \"react-bootstrap/Image\";\nimport \"./styling.scss\";\n\nclass UploadedImage extends Component {\n  static validURL(str) {\n    var pattern = new RegExp(\n      \"^(https?:\\\\/\\\\/)?\" + // protocol\n        \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n        \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n        \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n        \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n        \"(\\\\#[-a-z\\\\d_]*)?$\",\n      \"i\"\n    ); // fragment locator\n    return !!pattern.test(str);\n  }\n\n  static srcFormatter(file) {\n    return UploadedImage.validURL(file) ? file : URL.createObjectURL(file);\n  }\n\n  render() {\n    const file = UploadedImage.srcFormatter(this.props.file);\n    return (\n      <div>\n        <Image src={file} alt=\"This has not gone well\" fluid />\n      </div>\n    );\n  }\n}\n\nexport default UploadedImage;\n","import React, { Component } from \"react\";\nimport \"./sliders.scss\";\n\nclass Coins extends Component {\n  // Save png modified from https://mybyways.com/blog/convert-svg-to-png-using-your-browser\n\n  buildSVG() {\n    const { innerResponseData: inner, outerResponseData: outer } = this.props;\n    const spacing = 1; // Value of 1 for touching coins\n    const offset = spacing / 2;\n\n    const mySVG = (\n      <svg\n        viewBox={`0 0 ${outer.width * spacing} ${outer.height * spacing}`}\n        id=\"coinMosaicSVG\"\n      >\n        <rect\n          x=\"0\"\n          y=\"0\"\n          width={outer.width * spacing}\n          height={outer.height * spacing}\n          fill={outer.bgColour}\n        />\n        <g>\n          {outer.coinArray.map((row, i) => (\n            <g key={`outer${i}`}>\n              {row.map((colour, j) => (\n                <circle\n                  key={`outer${i}${j}`}\n                  cx={j * spacing + offset}\n                  cy={i * spacing + offset}\n                  r=\"0.5\"\n                  fill={colour}\n                />\n              ))}\n            </g>\n          ))}\n        </g>\n        <g>\n          {inner.coinArray.map((row, i) => (\n            <g key={`inner${i}`}>\n              {row.map((colour, j) => (\n                <circle\n                  key={`inner${i}${j}`}\n                  cx={j * spacing + spacing}\n                  cy={i * spacing + spacing}\n                  r=\"0.5\"\n                  fill={colour}\n                />\n              ))}\n            </g>\n          ))}\n        </g>\n      </svg>\n    );\n    return mySVG;\n  }\n\n  downloadDimensions() {\n    const { outerResponseData: outer } = this.props;\n    const aspectRatio = outer.height / outer.width;\n    let downloadDims = { width: 0, height: 0 };\n    downloadDims.width = 2000;\n    downloadDims.height = Math.round(downloadDims.width * aspectRatio);\n    return downloadDims;\n  }\n\n  handleOnClick() {\n    var canvas = document.createElement(\"canvas\", { id: \"c\" });\n    var svgGhost = document.getElementById(\"coinMosaicSVG\");\n    var svg = svgGhost.cloneNode(true);\n    var s = new XMLSerializer();\n    const { width, height } = this.downloadDimensions();\n    const name = `CoinMosaic${width}x${height}.png`;\n    svg.setAttribute(\"width\", width);\n    svg.setAttribute(\"height\", height);\n    svg.setAttribute(\"name\", name);\n    canvas.width = width;\n    canvas.height = height;\n    var data = s.serializeToString(svg);\n    var win = window.URL || window.webkitURL || window;\n    var img = new Image();\n    var blob = new Blob([data], { type: \"image/svg+xml\" });\n    var url = win.createObjectURL(blob);\n\n    img.onload = function () {\n      canvas.getContext(\"2d\").drawImage(img, 0, 0);\n      win.revokeObjectURL(url);\n      var uri = canvas.toDataURL(\"image/png\");\n      var a = document.createElement(\"a\");\n      document.body.appendChild(a);\n      a.style = \"display: none\";\n      a.href = uri;\n      a.download = name;\n      a.click();\n      window.URL.revokeObjectURL(uri);\n      document.body.removeChild(a);\n    };\n    img.src = url;\n  }\n\n  render() {\n    let startTime = Date.now();\n    const mySVG = this.buildSVG();\n    let endTime = Date.now();\n    // console.log(endTime - startTime);\n    return (\n      <div className=\"align-items-center\">\n        {mySVG}\n        <button\n          onClick={(mySVG) => this.handleOnClick(mySVG)}\n          className=\"btn btn-primary m-2\"\n        >\n          Download Image\n        </button>\n        <div id=\"d\"></div>\n        <br />\n      </div>\n    );\n  }\n}\nexport default Coins;\n","import React, { Component } from \"react\";\n\nclass StatDisplay extends Component {\n  render() {\n    const { data } = this.props;\n    const { totalCoins, totalTime, totalMass } = data;\n    return (\n      // <div className=\"container\">\n      //   <h4>Total Coins: {totalCoins}</h4>\n      //   <h4>Time Taken: {totalTime}</h4>\n      //   <h4>Mass of Mosaic: {totalMass} kg</h4>\n      // </div>\n      <div className=\"container\">\n        <h1>The Headline Stats</h1>\n        <table className=\"table \">\n          <thead>\n            <tr>\n              <td className=\"text-center\">Total Coins:</td>\n              <td className=\"text-center\">{totalCoins}</td>\n            </tr>\n            <tr>\n              <td className=\"text-center\">Time Taken:</td>\n              <td className=\"text-center\">{totalTime}</td>\n            </tr>\n            <tr>\n              <td className=\"text-center\">Mass of Mosaic:</td>\n              <td className=\"text-center\">{totalMass} kg</td>\n            </tr>\n          </thead>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default StatDisplay;\n","import React, { Component } from \"react\";\nimport InputForm from \"./inputForm\";\nimport UploadedImage from \"./uploadedImage\";\nimport Coins from \"./coins\";\nimport Image from \"react-bootstrap/Image\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { isEmpty } from \"lodash\";\nimport loading from \"../static/slow.gif\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styling.scss\";\nimport StatDisplay from \"./statDisplay\";\n\nclass Home extends Component {\n  state = {\n    file: \"https://picsum.photos/1000/700?grayscale\",\n    displayCanvas: false,\n    displayUpload: false,\n    outerResponseData: {\n      width: null,\n      height: null,\n      coinArray: null,\n      bgColour: null,\n      sliders: null,\n      stats: null,\n    },\n    innerResponseData: {\n      width: \"\",\n      height: \"\",\n      coinArray: [],\n    },\n    fetchInProgress: false,\n  };\n\n  handleFile(e) {\n    let file = e.target.files[0];\n    // Occurs if cancel is selected\n    if (typeof file === \"undefined\") {\n      this.setState({ file: \"https://picsum.photos/1000/700?grayscale\" });\n    } else if (file.type !== \"image/jpeg\" && file.type !== \"image/png\") {\n      e.target.value = null;\n      this.setState({ file: \"https://picsum.photos/1000/700?grayscale\" });\n      toast.error(\"File needs to be a jpeg or png\");\n    } else {\n      this.setState({ file, displayUpload: true, displayCanvas: false });\n    }\n  }\n\n  async handleUpload(inputData) {\n    const { file } = this.state;\n    if (UploadedImage.validURL(file)) {\n      toast.error(\"Need to select an image\");\n      return;\n    }\n    if (!isEmpty(inputData.errors)) {\n      toast.error(\"Correct the error of your ways to proceed\");\n      return;\n    }\n    let formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"userInput\", JSON.stringify(inputData));\n    this.setState({ fetchInProgress: false });\n    await axios({\n      url: `https://coin-mosaic.herokuapp.com/api/imagetransfer`,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      data: formData,\n      contentType: false,\n      processData: false,\n    })\n      .then((res) => {\n        this.handleReturn(res.data);\n      })\n      .catch((error) => {\n        this.handleError(error);\n      });\n  }\n\n  handleError(error) {\n    if (error.response) {\n      toast.error(`${error.response} occured whilst processing the image`);\n    } else if (error.request) {\n      toast.error(`${error.request} occured whilst processing the image`);\n    } else {\n      toast.error(`${error} occured whilst processing the image`);\n    }\n  }\n\n  handleReturn(result) {\n    let { innerResponseData, outerResponseData } = this.state;\n    const {\n      width,\n      height,\n      coin_array: coinArray,\n      bg_colour: bgColour,\n      stats,\n    } = result.outer;\n    outerResponseData = { width, height, coinArray, bgColour, stats };\n    console.log(result);\n    if (result.inner !== \"None\") {\n      const { width, height, coin_array: coinArray } = result.inner;\n      innerResponseData = { width, height, coinArray };\n    }\n    this.setState({\n      displayCanvas: true,\n      innerResponseData,\n      outerResponseData,\n      fetchInProgress: false,\n    });\n  }\n\n  render() {\n    const {\n      displayCanvas,\n      displayUpload,\n      innerResponseData,\n      outerResponseData,\n      fetchInProgress,\n    } = this.state;\n\n    let imageStyle = {};\n    let mainStyle = {};\n\n    if (fetchInProgress) {\n      mainStyle = { display: \"none\" };\n    } else {\n      imageStyle = { display: \"none\" };\n    }\n    return (\n      <React.Fragment>\n        <div style={imageStyle}>\n          <div className=\"container\">\n            <Image src={loading} alt=\"Loading...\" fluid />\n          </div>\n        </div>\n\n        <div style={mainStyle}>\n          <ToastContainer />\n          <div className=\"container\">\n            <div className=\"row justify-content-center mb-4\">\n              {displayCanvas ? (\n                <StatDisplay data={outerResponseData.stats} />\n              ) : null}\n            </div>\n            <div className=\"row justify-content-center mb-4\">\n              <div className=\"col-xs-12 col-md-6\">\n                {displayUpload ? (\n                  <UploadedImage file={this.state.file} />\n                ) : null}\n              </div>\n              <div className=\"col-xs-12 col-md-6\">\n                {displayCanvas ? (\n                  <Coins\n                    innerResponseData={innerResponseData}\n                    outerResponseData={outerResponseData}\n                  />\n                ) : null}\n              </div>\n            </div>\n            <div className=\"mb-4\">\n              <InputForm\n                onChange={(e) => this.handleFile(e)}\n                onClick={(e) => this.handleUpload(e)}\n              />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"./styling.scss\";\n\nclass Jumbo extends Component {\n  render() {\n    return (\n      <div className=\"jumbotron jumbotron-fluid noselect\">\n        <div className=\"container text-center\">\n          <h1 className=\"display-4 \">Coin Mosaic</h1>\n          <p className=\"lead\">\n            Convert your pictures into excessively large coin mosaics in one\n            easy click.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Jumbo;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/home\";\nimport Jumbo from \"./components/jumbo\";\n\nclass App extends Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <Jumbo />\n        <main className=\"App\">\n          <Home />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}